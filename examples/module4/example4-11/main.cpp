/*
 * Эта программа будет
 * работать неправильно.
 *
 * Приведение к типу int * преобразует указатель на double в указатель
 * на int. Однако, использование в данном случае приведения типов
 * является сомнительной операцией. Причина заключается в том, что
 * базовый тип указателя определяет, как именно компилятор будет
 * трактовать данные, на которые этот указатель указывает. В
 * рассматри­ваемом примере, хотя p фактически указывает на переменную
 * с пла­вающей точкой, компилятор будет “думать”, что p указывает
 * на int (потому что p является указателем на int).
 *
 * В программе переменной p (которая является указателем на int) было
 * присвоено значение адреса переменной x (которая имеет тип double).
 * Да­лее, когда переменной у присваивается значение, на которое
 * указывает p,у принимает только четыре байта данных (а не восемь,
 * как это требуется для значения типа double), потому что p
 * является указателем на int.
 */

#include <iostream>
using namespace std;

int main()
{
    double x, y;
    int *p;
    x = 123.23;

    /*
     * Используем приведение типа для
     * присваивания значения double *
     * переменной типа int *.
     */
    p = (int *) &x;
    y = *p;
    cout << y << "\n";

    return 0;
}
